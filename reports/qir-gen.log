Traceback (most recent call last):
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

qir_bitcode = circuit_to_qir(circuit, format="bitcode")
with open('circuit.bc', 'wb') as f:
    f.write(qir_bitcode)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[10], line 1[0m
[0;32m----> 1[0m qir_bitcode [38;5;241m=[39m [43mcircuit_to_qir[49m[43m([49m[43mcircuit[49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mbitcode[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m      2[0m [38;5;28;01mwith[39;00m [38;5;28mopen[39m([38;5;124m'[39m[38;5;124mcircuit.bc[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mwb[39m[38;5;124m'[39m) [38;5;28;01mas[39;00m f:
[1;32m      3[0m     f[38;5;241m.[39mwrite(qir_bitcode)

File [0;32m~/work/qir-book/qir-book/qir-book/tutorials/qir-emission/qutip/qutip_qip_qir.py:195[0m, in [0;36mcircuit_to_qir[0;34m(circuit, format, module_name)[0m
[1;32m    188[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    189[0m             [38;5;124mf[39m[38;5;124m"[39m[38;5;124mGate [39m[38;5;132;01m{[39;00mop[38;5;241m.[39mname[38;5;132;01m}[39;00m[38;5;124m not supported by the basic QIR builder, [39m[38;5;124m"[39m
[1;32m    190[0m             [38;5;241m+[39m [38;5;124m"[39m[38;5;124mand may require a custom declaration.[39m[38;5;124m"[39m
[1;32m    191[0m         )
[1;32m    193[0m fmt [38;5;241m=[39m QirFormat[38;5;241m.[39mensure([38;5;28mformat[39m)
[0;32m--> 195[0m module [38;5;241m=[39m pqg[38;5;241m.[39mSimpleModule(module_name, [43mcircuit[49m[38;5;241;43m.[39;49m[43mN[49m, circuit[38;5;241m.[39mnum_cbits [38;5;129;01mor[39;00m [38;5;241m0[39m)
[1;32m    196[0m builder [38;5;241m=[39m pqg[38;5;241m.[39mBasicQisBuilder(module[38;5;241m.[39mbuilder)
[1;32m    198[0m [38;5;28;01mfor[39;00m op [38;5;129;01min[39;00m circuit[38;5;241m.[39mgates:
[1;32m    199[0m     [38;5;66;03m# If we have a QuTiP gate, then we need to convert it into one of[39;00m
[1;32m    200[0m     [38;5;66;03m# the reserved operation names in the QIR base profile's quantum[39;00m
[1;32m    201[0m     [38;5;66;03m# instruction set (QIS).[39;00m

[0;31mAttributeError[0m: module 'qutip.qip.circuit' has no attribute 'N'
AttributeError: module 'qutip.qip.circuit' has no attribute 'N'

