Traceback (most recent call last):
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/envs/qir-book/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
with open('qutip_program.ll', 'w') as file:
    file.write(circuit_to_qir(teleportation, "text"))
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[8], line 2[0m
[1;32m      1[0m [38;5;28;01mwith[39;00m [38;5;28mopen[39m([38;5;124m'[39m[38;5;124mqutip_program.ll[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mw[39m[38;5;124m'[39m) [38;5;28;01mas[39;00m file:
[0;32m----> 2[0m     file[38;5;241m.[39mwrite([43mcircuit_to_qir[49m[43m([49m[43mteleportation[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mtext[39;49m[38;5;124;43m"[39;49m[43m)[49m)

File [0;32m~/work/qir-book/qir-book/qir-book/tutorials/qir-emission/qutip/qutip_qip_qir.py:198[0m, in [0;36mcircuit_to_qir[0;34m(circuit, format, module_name)[0m
[1;32m    192[0m [38;5;28;01mfor[39;00m op [38;5;129;01min[39;00m circuit[38;5;241m.[39mgates:
[1;32m    193[0m     [38;5;66;03m# If we have a QuTiP gate, then we need to convert it into one of[39;00m
[1;32m    194[0m     [38;5;66;03m# the reserved operation names in the QIR base profile's quantum[39;00m
[1;32m    195[0m     [38;5;66;03m# instruction set (QIS).[39;00m
[1;32m    196[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(op, Gate):
[1;32m    197[0m         [38;5;66;03m# TODO: Validate indices.[39;00m
[0;32m--> 198[0m         [43mappend_operation[49m[43m([49m[43mmodule[49m[43m,[49m[43m [49m[43mbuilder[49m[43m,[49m[43m [49m[43mop[49m[43m)[49m
[1;32m    200[0m     [38;5;28;01melif[39;00m [38;5;28misinstance[39m(op, Measurement):
[1;32m    201[0m         builder[38;5;241m.[39mmz(
[1;32m    202[0m             module[38;5;241m.[39mqubits[op[38;5;241m.[39mtargets[[38;5;241m0[39m]],
[1;32m    203[0m             module[38;5;241m.[39mresults[op[38;5;241m.[39mclassical_store],
[1;32m    204[0m         )

File [0;32m~/work/qir-book/qir-book/qir-book/tutorials/qir-emission/qutip/qutip_qip_qir.py:119[0m, in [0;36mcircuit_to_qir.<locals>.append_operation[0;34m(module, builder, op)[0m
[1;32m    117[0m [38;5;28;01mif[39;00m op[38;5;241m.[39mclassical_controls:
[1;32m    118[0m     result [38;5;241m=[39m op[38;5;241m.[39mclassical_controls[[38;5;241m0[39m]
[0;32m--> 119[0m     value [38;5;241m=[39m [38;5;124m"[39m[38;5;124mzero[39m[38;5;124m"[39m [38;5;28;01mif[39;00m [43mop[49m[38;5;241;43m.[39;49m[43mclassical_control_value[49m [38;5;241m==[39m [38;5;241m0[39m [38;5;28;01melse[39;00m [38;5;124m"[39m[38;5;124mone[39m[38;5;124m"[39m
[1;32m    120[0m     [38;5;66;03m# Pull off the first control and recurse.[39;00m
[1;32m    121[0m     op_with_less_controls [38;5;241m=[39m Gate([38;5;241m*[39m[38;5;241m*[39mop[38;5;241m.[39m[38;5;18m__dict__[39m)

[0;31mAttributeError[0m: 'Gate' object has no attribute 'classical_control_value'
AttributeError: 'Gate' object has no attribute 'classical_control_value'

